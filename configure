#!/bin/bash

#
# pkgctl configuration script.
# Written with <3 by ChruÅ›cik.
#
# Licensed under GNU General Public License v3.
# zOS and pkgctl zOS and pkgctl comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law. 
#

VERSION="1.0"

printf "Starting pkgctl $VERSION configuration...\n"

help() {
	printf "Usage: ./configure [options]\n\nOptions:\n--prefix= [Default: /usr/local] Self-explanatory\n--rootdir= [Default: /] Self-explanatory\n" 
	exit 0
}

DESTDIR="/"
PREFIX="/usr/local"

for arg in "$@"; do
	case $arg in
		--help)
			help
			;;
		--prefix=*)
			PREFIX="${arg#*=}"
			;;
		--rootdir=*)
			DESTDIR="${arg#*=}"
			;;
	esac
done

printf "Checking operating system... "
OS=$(uname -o)
case "$OS" in
	GNU/Linux)
		printf "GNU/Linux\n"
		SED="sed"
		;;
	*BSD)
		printf "BSD\n"
		SED="gsed"
		;;
	Darwin)
		printf "Darwin\n"
		SED="gsed"
		;;
esac

printf "Checking if $SED is avaible... "
if command -v "$SED" >/dev/null 2>&1; then
	printf "yes\n"
else
	printf "no\n"
	exit 1
fi

printf "Checking if Python 3 is avaible... "
if command -v "python" >/dev/null 2>&1; then
	printf "yes\n"
else 
	printf "no\n"
	exit 1
fi

printf "Checking if make is GNU make... "
if make --version 2>/dev/null | grep -q "GNU Make"; then
	printf "yes\n"
else 
	printf "no\n"
	printf "Checking if gmake is avaible... "
	if command -v "gmake" >/dev/null 2>&1; then
		printf "yes\n"
	else
		printf "no\n"
		exit 1
	fi
fi

printf "Checking if tqdm Python module is avaible... "
if python3 -c "import tqdm" &> /dev/null; then
	printf "yes\n"
else
	printf "no\n"
	exit 1
fi

printf "Checking if requests Python module is avaible... "
if python3 -c "import requests" &> /dev/null; then
	printf "yes\n"
else
	printf "no\n"
	exit 1
fi

printf "Checking source directory... "
SRCDIR=$(dirname $(readlink -f "$0"))
printf "$SRCDIR\n"

printf "Checking build directory... "
CFGDIR=$(pwd)
printf "$CFGDIR\n"

printf "Creating Makefile... "
cp $SRCDIR/Makefile.tmpl $CFGDIR/Makefile
MAKEFILE=$CFGDIR/Makefile
$SED -i "s|srcdir|$SRCDIR|" $MAKEFILE 
$SED -i "s|prefix|$PREFIX|" $MAKEFILE
$SED -i "s|destdir|$DESTDIR|" $MAKEFILE
printf "ok\n"
exit 0
